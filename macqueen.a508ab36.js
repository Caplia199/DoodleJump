class t{constructor(t){this.levels=[];for(let i=0;i<t.length-1;i++)this.levels.push(new e(t[i],t[i+1]))}static feedForward(t,i){let s=e.feedForward(t,i.levels[0]);for(let t=1;t<i.levels.length;t++)s=e.feedForward(s,i.levels[t]);return s}static replicate(e){let i=new t(e.levels.map(t=>t.inputs.length).concat(e.levels[e.levels.length-1].outputs.length));for(let t=0;t<e.levels.length;t++)i.levels[t].biases=[...e.levels[t].biases],i.levels[t].weights=e.levels[t].weights.map(t=>[...t]);return i}static mutate(t,e=.1){t.levels.forEach(t=>{var i,s;for(let s=0;s<t.biases.length;s++)t.biases[s]=(i=t.biases[s])+(2*Math.random()-1-i)*e;for(let i=0;i<t.weights.length;i++)for(let h=0;h<t.weights[i].length;h++)t.weights[i][h]=(s=t.weights[i][h])+(2*Math.random()-1-s)*e})}}class e{constructor(t,i){this.inputs=Array(t),this.outputs=Array(i),this.biases=Array(i),this.weights=Array.from({length:t},()=>Array(i)),e.#t(this)}static #t(t){for(let e=0;e<t.inputs.length;e++)for(let i=0;i<t.outputs.length;i++)t.weights[e][i]=2*Math.random()-1;for(let e=0;e<t.biases.length;e++)t.biases[e]=2*Math.random()-1}static feedForward(t,e){e.inputs.splice(0,e.inputs.length,...t);for(let t=0;t<e.outputs.length;t++){let i=0;for(let s=0;s<e.inputs.length;s++)i+=e.inputs[s]*e.weights[s][t];e.outputs[t]=+(i>e.biases[t])}return e.outputs}}class i{constructor(t,e,i=1){this.outer=[],this.inner=[],this.checkpoints=[],this.width=t,this.height=e,this.generateTrack(i),this.generateCheckpoints(i)}generateTrack(t){1===t?(this.outer=[{x:150,y:100},{x:650,y:100},{x:725,y:175},{x:750,y:300},{x:725,y:425},{x:650,y:500},{x:150,y:500},{x:75,y:425},{x:50,y:300},{x:75,y:175},{x:150,y:100}],this.inner=[{x:250,y:200},{x:550,y:200},{x:625,y:250},{x:650,y:300},{x:625,y:350},{x:550,y:400},{x:250,y:400},{x:175,y:350},{x:150,y:300},{x:175,y:250},{x:250,y:200}]):2===t&&(this.outer=[{x:100,y:100},{x:400,y:50},{x:700,y:100},{x:750,y:300},{x:700,y:500},{x:400,y:550},{x:100,y:500},{x:50,y:400},{x:150,y:300},{x:50,y:200},{x:100,y:100}],this.inner=[{x:200,y:200},{x:350,y:150},{x:600,y:200},{x:650,y:300},{x:600,y:400},{x:450,y:450},{x:300,y:400},{x:250,y:350},{x:350,y:300},{x:250,y:250},{x:200,y:200}])}generateCheckpoints(t){1===t?this.checkpoints=[{x:400,y:150,radius:30},{x:650,y:150,radius:30},{x:700,y:300,radius:30},{x:650,y:450,radius:30},{x:400,y:450,radius:30},{x:150,y:450,radius:30},{x:100,y:300,radius:30},{x:150,y:150,radius:30}]:2===t&&(this.checkpoints=[{x:400,y:100,radius:25},{x:650,y:150,radius:25},{x:700,y:300,radius:25},{x:650,y:450,radius:25},{x:400,y:500,radius:25},{x:150,y:450,radius:25},{x:100,y:300,radius:25},{x:200,y:225,radius:25},{x:400,y:200,radius:25},{x:550,y:300,radius:25},{x:450,y:400,radius:25},{x:300,y:325,radius:25}])}}class s{constructor(e,i,s,h){this.alive=!0,this.score=0,this.timeAlive=0,this.checkpointIndex=0,this.laps=0,this.width=20,this.height=30,this.maxSpeed=5,this.x=e,this.y=i,this.angle=s,this.speed=0,this.brain=h||new t([2,6,1])}update(e){if(!this.alive)return!1;this.speed=2.5;let i=e.checkpoints[this.checkpointIndex%e.checkpoints.length],s=Math.hypot(this.x-i.x,this.y-i.y),h=Math.atan2(i.y-this.y,i.x-this.x),n=this.angle-h;for(;n>Math.PI;)n-=2*Math.PI;for(;n<-Math.PI;)n+=2*Math.PI;let r=[s/300,n/Math.PI],a=2*t.feedForward(r,this.brain)[0]-1;return this.angle+=.03*a,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed,this.timeAlive++,this.checkCollision(e),this.checkCheckpoints(e)}checkCollision(t){!function(t,e){for(let i of t.getCorners())if(!h(i,e.outer)||h(i,e.inner))return!1;return!0}(this,t)&&(this.alive=!1)}checkCheckpoints(t){if(!this.alive)return!1;let e=t.checkpoints[this.checkpointIndex%t.checkpoints.length];return!!(Math.hypot(this.x-e.x,this.y-e.y)<e.radius)&&(this.checkpointIndex++,this.timeAlive=0,!!(this.checkpointIndex>=t.checkpoints.length))&&(this.laps++,this.checkpointIndex=0,!0)}getFitness(t){let e=this.checkpointIndex%t.checkpoints.length,i=t.checkpoints[e],s=(this.checkpointIndex-1+t.checkpoints.length)%t.checkpoints.length,h=t.checkpoints[s],n=Math.hypot(i.x-h.x,i.y-h.y),r=Math.max(0,n-Math.hypot(this.x-i.x,this.y-i.y)),a=this.checkpointIndex*n+r;return a-=.1*this.timeAlive,this.alive||(a-=100),a}getCorners(){let t=Math.hypot(this.width,this.height)/2,e=Math.atan2(this.width,this.height),i={x:this.x-Math.sin(this.angle-e)*t,y:this.y+Math.cos(this.angle-e)*t},s={x:this.x-Math.sin(this.angle+e)*t,y:this.y+Math.cos(this.angle+e)*t};return[i,s,{x:this.x-Math.sin(Math.PI+this.angle-e)*t,y:this.y-Math.cos(Math.PI+this.angle-e)*t},{x:this.x-Math.sin(Math.PI+this.angle+e)*t,y:this.y-Math.cos(Math.PI+this.angle+e)*t}]}}function h(t,e){let i=!1;for(let s=0,h=e.length-1;s<e.length;h=s++){let n=e[s].x,r=e[s].y,a=e[h].x,l=e[h].y;r>t.y!=l>t.y&&t.x<(a-n)*(t.y-r)/(l-r)+n&&(i=!i)}return i}class n{constructor(t){this.cars=[],this.bestCar=null,this.populationSize=1,this.currentCarIndex=0,this.running=!1,this.animationId=0,this.generation=1,this.currentLevel=1,this.totalLaps=0,this.startTime=0,this.canvas=t,this.ctx=t.getContext("2d"),this.track=new i(t.width,t.height,this.currentLevel),this.initUI()}initUI(){document.getElementById("start-btn").addEventListener("click",()=>this.start()),document.getElementById("reset-btn").addEventListener("click",()=>this.resetGame())}start(){this.running||(document.getElementById("start-btn").style.display="none",document.getElementById("reset-btn").style.display="inline-block",this.resetGame(!1))}resetGame(t=!0){this.running=!1,this.animationId&&cancelAnimationFrame(this.animationId),this.currentLevel=1,this.generation=1,this.totalLaps=0,this.startTime=Date.now(),t&&localStorage.removeItem("bestBrain_level"+this.currentLevel),this.track=new i(this.canvas.width,this.canvas.height,this.currentLevel),this.cars=this.createInitialPopulation(),this.currentCarIndex=0;let e=localStorage.getItem("bestBrain_level"+this.currentLevel);if(e){console.log("Loading brain from localStorage for level",this.currentLevel);let t=JSON.parse(e);this.cars[0].brain=t,this.bestCar=this.cars[0]}this.running=!0,this.animate()}createInitialPopulation(){let t=[],e=this.getStartPosition();for(let i=0;i<this.populationSize;i++)t.push(new s(e.x,e.y,e.angle));return this.currentCarIndex=0,t}nextGeneration(){this.generation++;let e=this.cars.reduce((t,e)=>t.getFitness(this.track)>e.getFitness(this.track)?t:e);e?(this.bestCar=new s(0,0,0,e.brain),localStorage.setItem("bestBrain_level"+this.currentLevel,JSON.stringify(e.brain)),this.cars=this.createInitialPopulation(),this.cars[0].brain=t.replicate(e.brain),t.mutate(this.cars[0].brain,.2)):this.cars=this.createInitialPopulation(),this.currentCarIndex=0}animate(){if(!this.running)return;let t=this.cars[this.currentCarIndex];if(t.update(this.track)){this.running=!1,this.showLevelCompleteBanner(()=>{this.nextLevel(t.brain),this.running=!0,this.animate()});return}!t.alive&&(this.currentCarIndex++,this.currentCarIndex>=this.cars.length&&this.nextGeneration()),this.updateUI(),this.render(),this.animationId=requestAnimationFrame(()=>this.animate())}getStartPosition(){if(1===this.currentLevel)return{x:170,y:150,angle:0};if(2===this.currentLevel)return{x:150,y:150,angle:0};throw Error("Invalid level")}render(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.renderTrack(),this.currentCarIndex>=this.cars.length)return;let t=this.cars[this.currentCarIndex];this.ctx.save(),this.track.checkpoints.forEach((e,i)=>{let s=t.checkpointIndex%this.track.checkpoints.length;this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),this.ctx.lineWidth=2,i<t.checkpointIndex?(this.ctx.strokeStyle="rgba(0, 255, 0, 0.8)",this.ctx.fillStyle="rgba(0, 255, 0, 0.3)"):i===s?(this.ctx.strokeStyle="rgba(255, 255, 0, 1)",this.ctx.fillStyle="rgba(255, 255, 0, 0.4)"):(this.ctx.strokeStyle="rgba(255, 255, 255, 0.5)",this.ctx.fillStyle="rgba(255, 255, 255, 0.1)"),this.ctx.stroke(),this.ctx.fill(),this.ctx.fillStyle="white",this.ctx.font="12px Arial",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(i.toString(),e.x,e.y)}),this.ctx.restore(),this.ctx.globalAlpha=.2,this.cars.forEach(t=>{t.alive&&this.renderCar(t)}),this.ctx.globalAlpha=1,t&&t.alive&&this.renderCar(t)}renderTrack(){for(let t of(this.ctx.save(),this.ctx.strokeStyle="#fff",this.ctx.lineWidth=5,this.ctx.fillStyle="#888",this.ctx.beginPath(),this.ctx.moveTo(this.track.outer[0].x,this.track.outer[0].y),this.track.outer))this.ctx.lineTo(t.x,t.y);for(let t of(this.ctx.closePath(),this.ctx.moveTo(this.track.inner[0].x,this.track.inner[0].y),this.track.inner))this.ctx.lineTo(t.x,t.y);for(let t of(this.ctx.closePath(),this.ctx.fill("evenodd"),this.ctx.beginPath(),this.ctx.moveTo(this.track.outer[0].x,this.track.outer[0].y),this.track.outer))this.ctx.lineTo(t.x,t.y);for(let t of(this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(this.track.inner[0].x,this.track.inner[0].y),this.track.inner))this.ctx.lineTo(t.x,t.y);this.ctx.stroke(),this.ctx.strokeStyle="#fff",this.ctx.lineWidth=10,this.ctx.setLineDash([10,10]),this.ctx.beginPath(),1===this.currentLevel?(this.ctx.moveTo(200,100),this.ctx.lineTo(200,200)):2===this.currentLevel&&(this.ctx.moveTo(150,100),this.ctx.lineTo(150,200)),this.ctx.stroke(),this.ctx.restore()}renderCar(t){this.ctx.save(),this.ctx.translate(t.x,t.y),this.ctx.rotate(t.angle),this.ctx.fillStyle=t.alive?"#3498db":"#e74c3c",this.ctx.fillRect(-t.width/2,-t.height/2,t.width,t.height),this.ctx.restore()}updateUI(){document.getElementById("level").textContent=this.currentLevel.toString(),document.getElementById("generation").textContent=this.generation.toString();let t=this.cars.reduce((t,e)=>t.getFitness(this.track)>e.getFitness(this.track)?t:e);if(document.getElementById("best-score").textContent=t.getFitness(this.track).toFixed(0),this.currentCarIndex<this.cars.length){let t=this.cars[this.currentCarIndex];t&&(document.getElementById("score").textContent=t.getFitness(this.track).toFixed(0))}document.getElementById("laps-completed").textContent=this.totalLaps.toString();let e=Math.floor((Date.now()-this.startTime)/1e3);document.getElementById("total-time").textContent=`${e}\u{441}`}showLevelCompleteBanner(t){let e=document.getElementById("level-complete-banner");e.style.display="block",setTimeout(()=>{e.style.display="none",t()},3e3)}nextLevel(e){if(this.totalLaps++,this.currentLevel++,this.generation=1,this.currentLevel>2){alert("Поздравляем! Вы прошли все уровни!"),this.resetGame(!0);return}localStorage.setItem("bestBrain_level"+this.currentLevel,JSON.stringify(e)),this.track=new i(this.canvas.width,this.canvas.height,this.currentLevel),this.cars=this.createInitialPopulation(),this.cars[0].brain=t.replicate(e),t.mutate(this.cars[0].brain,.3),this.currentCarIndex=0,this.bestCar=this.cars[0]}}document.addEventListener("DOMContentLoaded",()=>{let t=document.getElementById("gameCanvas");t&&new n(t)});
//# sourceMappingURL=macqueen.a508ab36.js.map
